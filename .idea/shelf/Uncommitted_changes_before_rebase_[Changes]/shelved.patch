Index: src/app/screens/Homepage/recommendations.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect} from \"react\";\nimport {Container, Stack, Box, Avatar} from \"@mui/material\";\nimport {BoArticle} from \"../../../types/boArticle\";\nimport {Dispatch, createSelector} from \"@reduxjs/toolkit\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setBestBoArticles, setNewsBoArticles, setTrendBoArticles,} from \"./slice\";\nimport {retrieveBestBoArticles, retrieveNewsBoArticles, retrieveTrendBoArticles,} from \"./selector\";\nimport CommunityApiService from \"../../apiServices/communityApiService\";\nimport {serverApi} from \"../../../lib/Config\";\nimport {verifiedMemberData} from \"../../apiServices/verify\";\nimport {TViewer} from \"../MemberPage/TViewer\";\n\n/** REDUX SLICE */\nconst actionDispatch = (dispatch: Dispatch) => ({\n    setBestBoArticles: (data: BoArticle[]) => dispatch(setBestBoArticles(data)),\n    setTrendBoArticles: (data: BoArticle[]) => dispatch(setTrendBoArticles(data)),\n    setNewsBoArticles: (data: BoArticle[]) => dispatch(setNewsBoArticles(data)),\n});\n\n/** REDUX SELECTOR */\nconst ArticlessRetriever = createSelector(\n    retrieveBestBoArticles,\n    retrieveNewsBoArticles,\n    retrieveTrendBoArticles,\n    (bestBoArticles, newsBoArticles, trendBoArticles) => ({\n        bestBoArticles,\n        newsBoArticles,\n        trendBoArticles,\n    })\n);\n\nexport default function Recommendations() {\n    const {setBestBoArticles, setTrendBoArticles, setNewsBoArticles} =\n        actionDispatch(useDispatch());\n\n    const {newsBoArticles, trendBoArticles, bestBoArticles} =\n        useSelector(ArticlessRetriever);\n\n    useEffect(() => {\n        const communityService = new CommunityApiService();\n        communityService.getTargetArticles({bo_id: \"all\", page: 1, limit: 2, order: \"art_views\"})\n            .then((data) => setBestBoArticles(data))\n            .catch((err) => console.log(err));\n\n        communityService.getTargetArticles({bo_id: \"all\", page: 1, limit: 2, order: \"art_likes\"})\n            .then((data) => setTrendBoArticles(data))\n            .catch((err) => console.log(err));\n\n        communityService.getTargetArticles({bo_id: \"celebrity\", page: 1, limit: 2, order: \"art_views\"})\n            .then((data) => setNewsBoArticles(data))\n            .catch((err) => console.log(err));\n    }, []);\n\n    return (\n        <div className=\"top_article_frame\">\n            <Container maxWidth=\"lg\" sx={{mb: \"50px\", mt: \"60px\"}} style={{position: \"relative\"}}>\n                <Stack flexDirection={\"column\"} alignItems={\"center\"} sx={{mt: \"45px\"}}>\n                    <Box className={\"category_title\"}>Tafsiya qilingan maqolalar</Box>\n                    <Stack className={\"article_main\"} flexDirection={\"row\"}>\n                        <Stack className={\"article_container\"}>\n                            <Box className={\"article_category\"}>Ko'p ko'rilgan</Box>\n                            {bestBoArticles?.map((article: BoArticle) => {\n                                const image = article?.art_image\n                                    ? `${serverApi}/${article?.art_image}`\n                                    : \"/community/odamcha.svg\";\n                                return (\n                                    <Stack className={\"article_box\"} key={article._id}>\n                                        <Box className={\"article_img\"} sx={{backgroundImage: `url(${image})`}}></Box>\n                                        <Box className={\"article_info\"}>\n                                            <Box className={\"article_main_info\"}>\n                                                <div className={\"article_author\"}>\n                                                    <Avatar\n                                                        alt=\"Author_photo\"\n                                                        src={\n                                                            article?.member_data?.mb_image\n                                                                ? `${serverApi}/${article?.member_data?.mb_image}`\n                                                                : \"/auth/odamcha.svg\"\n                                                        }\n                                                    />\n                                                    <span\n                                                        className={\"author_username\"}>{article?.member_data?.mb_nick}\n                                                    </span>\n                                                </div>\n                                                <span className={\"article_title\"}>{article?.art_subject}</span>\n                                                <p className={\"article_desc\"}></p>\n                                            </Box>\n                                        </Box>\n                                    </Stack>\n                                );\n                            })};\n                            <Box className={\"article_category\"} sx={{marginTop: \"10px\"}}> Ko'p yoqtirilgan </Box>\n\n                            {trendBoArticles?.map((article: BoArticle) => {\n                                const image = article?.art_image\n                                    ? `${serverApi}/${article?.art_image}`\n                                    : \"/community/odamcha.svg\";\n                                return (\n                                    <Stack className={\"article_box\"} key={article._id}>\n                                        <Box className={\"article_img\"} sx={{backgroundImage: `url(${image})`}}></Box>\n                                        <Box className={\"article_info\"}>\n                                            <Box className={\"article_main_info\"}>\n                                                <div className={\"article_author\"}>\n                                                    <Avatar\n                                                        alt=\"Author_photo\"\n                                                        src={\n                                                            article?.member_data?.mb_image\n                                                                ? `${serverApi}/${article?.member_data?.mb_image}`\n                                                                : \"/auth/odamcha.svg\"\n                                                        }\n                                                        sx={{width: \"35px\", height: \"35px\"}}\n                                                    />\n                                                    <span\n                                                        className={\"author_username\"}>{article?.member_data?.mb_nick}\n                                                    </span>\n                                                </div>\n                                                <span className={\"article_title\"}>{article?.art_subject}</span>\n                                                <p className={\"article_desc\"}></p>\n                                            </Box>\n                                        </Box>\n                                    </Stack>\n                                );\n                            })};\n                        </Stack>\n                        <Stack className={\"article_container\"}>\n                            <Box className={\"article_category\"}>Mashhurlar</Box>\n                            {newsBoArticles?.map((article: BoArticle) => {\n                                return (\n                                    <Box className={\"article_news\"}>\n                                        <TViewer chosenSingleBoArticle={article}/>\n                                    </Box>\n                                )\n                            })}\n                        </Stack>\n                    </Stack>\n                </Stack>\n            </Container>\n        </div>\n    );\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/screens/Homepage/recommendations.tsx b/src/app/screens/Homepage/recommendations.tsx
--- a/src/app/screens/Homepage/recommendations.tsx	(revision 707a16508ae271dd841370f62e59818b31b114c8)
+++ b/src/app/screens/Homepage/recommendations.tsx	(date 1705899422810)
@@ -7,7 +7,6 @@
 import {retrieveBestBoArticles, retrieveNewsBoArticles, retrieveTrendBoArticles,} from "./selector";
 import CommunityApiService from "../../apiServices/communityApiService";
 import {serverApi} from "../../../lib/Config";
-import {verifiedMemberData} from "../../apiServices/verify";
 import {TViewer} from "../MemberPage/TViewer";
 
 /** REDUX SLICE */
Index: src/app/App.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useState, useEffect} from 'react';\n// useStateni REACT dan import qilib olamz.\n// bizning path imiz uzgarganda viewimizni qayta qurub beradi.\n\nimport \"../css/App.css\";\nimport \"../css/navbar.css\";\nimport \"../css/footer.css\";\nimport {BrowserRouter as Router, Switch, Route, Link, useHistory} from \"react-router-dom\";\n\nimport {RestaurantPage} from \"./screens/RestaurantPage\";\nimport {CommunityPage} from \"./screens/CommunityPage\";\nimport {OrdersPage} from \"./screens/OrdersPage\";\nimport {MemberPage} from \"./screens/MemberPage\";\nimport {HelpPage} from \"./screens/HelpPage\";\nimport {LoginPage} from \"./screens/LoginPage\";\nimport {Homepage} from \"./screens/Homepage\";\nimport {NavbarHome} from \"./components/header\";\nimport {NavbarRestaurant} from \"./components/header/restaurant\";\nimport {NavbarOthers} from \"./components/header/others\";\nimport {Footer} from \"./components/footer\";\nimport AuthenticationModal from \"./components/auth\";\nimport MemberApiService from \"./apiServices/memberApiService\";\nimport {sweetFailureProvider, sweetTopSmallSuccessAlert} from \"../lib/sweetAlert\";\nimport {Definer} from \"../lib/Definer\";\nimport \"../app/apiServices/verify\";\nimport {CartItem} from \"../types/others\";\nimport {Product} from \"../types/product\";\n\nfunction App() {\n    /** INITIALIZATION **/\n    // const [verifiedMemberData, setVerifiedMemberData] = useState<Member | null>(null);\n    const [path, setPath] = useState();\n    const main_path = window.location.pathname;\n    const [signUpOpen, setSignUpOpen] = useState(false); // boshlang'ish qiymat false\n    const [loginOpen, setLoginOpen] = useState(false); // boshlang'ish qiymat false\n    const [orderRebuild, setOrderRebuild] = useState<Date>(new Date());\n\n\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const cartJson: any = localStorage.getItem(\"cart_data\");\n    const current_cart: CartItem[] = JSON.parse(cartJson) ?? [];\n    const [cartItems, setCartItems] = useState<CartItem[]>(current_cart);\n\n    /** HANDLERS **/\n    const handleSignUpOpen = () => setSignUpOpen(true);\n    const handleSignUpClose = () => setSignUpOpen(false);\n    const handleLoginOpen = () => setLoginOpen(true);\n    const handleLoginClose = () => setLoginOpen(false);\n\n    const handleLogOutClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleCloseLogOut = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(null);\n    };\n    const handleLogOutRequest = async () => {\n        try {\n            let member_data: any = null; // nay qiymatni null boshlangich qiymat bn olyabman\n            const memberApiService = new MemberApiService();\n            await memberApiService.logOutRequest(); // memberApiService ni  logOutRequest methodini chaqirib olyabman\n            await sweetTopSmallSuccessAlert('success', 700, true);\n            // localStorage.removeItem('member_data');\n        } catch (err: any) {\n            console.log(err);\n            sweetFailureProvider(Definer.general_err1);\n        }\n    };\n\n    const onAdd = (product: Product) => {\n        const exist: any = cartItems?.find(\n            (item: CartItem) => item._id === product._id\n        );\n        if (exist) {\n            const cart_updated = cartItems.map((item: CartItem) =>\n                item._id === product._id  // item ni idisi product_id isiga teng bolgan holda\n                    ? {...exist, quantity: exist.quantity + 1} // teng bolsa  exist ni o'zidan olib quantity ni bitta ga oshirib qaytar\n                    : item // teng bolmaganda o'zini qaytar deyabman\n            );\n            setCartItems(cart_updated);\n            localStorage.setItem(\"cart_data\", JSON.stringify(cart_updated));\n        } else {\n            const new_item: CartItem = {\n                _id: product._id,\n                quantity: 1,\n                price: product.product_price,\n                image: product.product_images[0],\n                name: product.product_name,\n            };\n            // new_item ni hozirgi card_item ga qo'shib yangi qiymat hosil qib ber deyabmiz\n            const cart_updated = [...cartItems, {...new_item}];\n            console.log(\"new\", cart_updated);\n\n            // localStorage da cart_data ni json formatda o'tkazib data ni yarngilab olaman\n            setCartItems(cart_updated);\n            localStorage.setItem(\"cart_data\", JSON.stringify(cart_updated));\n        }\n    };\n    const onRemove = (item: CartItem) => {\n        const item_data: any = cartItems?.find(\n            (ele: CartItem) => ele._id === item._id\n        );\n        if (item_data.quantity === 1) {\n            const filter_items: CartItem[] = cartItems.filter(\n                (ele) => ele._id !== item._id // ele ni id isi item_id ga teng bolmagada ele ni tushurib qoldir deyabman\n            );\n            setCartItems(filter_items);\n            localStorage.setItem(\"cart_data\", JSON.stringify(filter_items));\n        } else {\n            const cart_updated = cartItems?.map((ele: CartItem) =>\n                ele._id === item_data._id\n                    ? {...item_data, quantity: item_data.quantity - 1} // bu yerda item_data ni ichidan quantity ni yengilab -1 ga tenglayabman\n                    : item // va item ni qaytar deyabman\n            );\n            console.log(\"rem\", cart_updated);\n            setCartItems(cart_updated);\n            localStorage.setItem(\"cart_data\", JSON.stringify(cart_updated));\n        }\n    };\n    const onDelete = (item: CartItem) => {\n        const deleted_items: CartItem[] = cartItems?.filter(\n            (ele) => ele._id !== item._id\n        );\n        setCartItems(deleted_items);\n        localStorage.setItem(\"cart_data\", JSON.stringify(deleted_items));\n    };\n    const onDeleteAll = () => {\n        setCartItems([]);\n        localStorage.removeItem(\"cart_data\");\n    };\n\n\n    return (\n        <Router>\n            {main_path == \"/\" ? (\n                <NavbarHome\n                    handleLogOutRequest={handleLogOutRequest}\n                    handleCloseLogOut={handleCloseLogOut}\n                    handleLogOutClick={handleLogOutClick}\n                    handleSignUpOpen={handleSignUpOpen}\n                    handleLoginOpen={handleLoginOpen}\n                    setOrderRebuild={setOrderRebuild}\n                    onDeleteAll={onDeleteAll}\n                    cartItems={cartItems}\n                    anchorEl={anchorEl}\n                    onRemove={onRemove}\n                    onDelete={onDelete}\n                    setPath={setPath}\n                    onAdd={onAdd}\n                    open={open}\n                />\n            ) : main_path.includes(\"/restaurant\") ? (\n                <NavbarRestaurant\n                    handleLogOutRequest={handleLogOutRequest}\n                    handleLogOutClick={handleLogOutClick}\n                    handleCloseLogOut={handleCloseLogOut}\n                    handleSignUpOpen={handleSignUpOpen}\n                    handleLoginOpen={handleLoginOpen}\n                    setOrderRebuild={setOrderRebuild}\n                    onDeleteAll={onDeleteAll}\n                    cartItems={cartItems}\n                    onRemove={onRemove}\n                    onDelete={onDelete}\n                    anchorEl={anchorEl}\n                    setPath={setPath}\n                    onAdd={onAdd}\n                    open={open}\n                />\n            ) : (\n                <NavbarOthers\n                    handleLogOutRequest={handleLogOutRequest}\n                    handleLogOutClick={handleLogOutClick}\n                    handleCloseLogOut={handleCloseLogOut}\n                    handleSignUpOpen={handleSignUpOpen}\n                    handleLoginOpen={handleLoginOpen}\n                    setOrderRebuild={setOrderRebuild}\n                    onDeleteAll={onDeleteAll}\n                    cartItems={cartItems}\n                    anchorEl={anchorEl}\n                    onRemove={onRemove}\n                    onDelete={onDelete}\n                    setPath={setPath}\n                    onAdd={onAdd}\n                    open={open}\n                />\n            )}\n\n            {/*buyerdan swich routerlar boshlandi*/}\n            <Switch>\n                <Route path=\"/restaurant\">\n                    < RestaurantPage onAdd={onAdd}/>\n                </Route>\n                <Route path=\"/community\">\n                    < CommunityPage/>\n                </Route>\n                <Route path=\"/orders\">\n                    < OrdersPage\n                        orderRebuild={orderRebuild}\n                        setOrderRebuild={setOrderRebuild}\n                    />\n                </Route>\n                <Route path=\"/member-page\">\n                    < MemberPage/>\n                </Route>\n                <Route path=\"/help\">\n                    < HelpPage/>\n                </Route>\n                <Route path=\"/login\">\n                    < LoginPage/>\n                </Route>\n                <Route path=\"/\">\n                    < Homepage/>\n                </Route>\n            </Switch>\n\n            <Footer/>\n            <AuthenticationModal\n                loginOpen={loginOpen}\n                handleLoginOpen={handleLoginOpen}\n                handleLoginClose={handleLoginClose}\n                signUpOpen={signUpOpen}\n                handleSignUpOpen={handleSignUpOpen}\n                handleSignUpClose={handleSignUpClose}\n            />\n        </Router>\n    );\n}\n\nexport default App;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/App.tsx b/src/app/App.tsx
--- a/src/app/App.tsx	(revision 707a16508ae271dd841370f62e59818b31b114c8)
+++ b/src/app/App.tsx	(date 1705891675763)
@@ -127,7 +127,7 @@
     };
     const onDeleteAll = () => {
         setCartItems([]);
-        localStorage.removeItem("cart_data");
+        localStorage.removeItem("cart_data")
     };
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"3de3c9c5-d777-4679-95a1-af5529236930\" name=\"Changes\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ComposerSettings\">\n    <execution />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"TypeScript File\" />\n        <option value=\"CSS File\" />\n        <option value=\"JavaScript File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"7198b839c33bb3c8935f40877e71973e553fafa8\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"PhpWorkspaceProjectConfiguration\" interpreter_name=\"/opt/homebrew/Cellar/php/8.1.11/bin/php\" />\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2YbxTjCLxMjdHHbhpVlhVysgnNg\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;React Native.Unnamed (1).executor&quot;: &quot;Debug&quot;,\n    &quot;React Native.Unnamed.executor&quot;: &quot;Debug&quot;,\n    &quot;React Native.firstDebugging.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;develop&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/mac/Documents/papay-react&quot;,\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.editor&quot;,\n    &quot;ts.external.directory.path&quot;: &quot;/Users/mac/Documents/papay-react/node_modules/typescript/lib&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/public/auth\" />\n      <recent name=\"$PROJECT_DIR$/public/icons\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/app/screens/MemberPage\" />\n      <recent name=\"$PROJECT_DIR$/src/app/screens/OrdersPage\" />\n      <recent name=\"$PROJECT_DIR$/src/app/components/tuiEditor\" />\n      <recent name=\"$PROJECT_DIR$/src/app/screens\" />\n      <recent name=\"$PROJECT_DIR$/public/icons\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"3de3c9c5-d777-4679-95a1-af5529236930\" name=\"Changes\" comment=\"\" />\n      <created>1700808092904</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1700808092904</updated>\n      <workItem from=\"1700808094575\" duration=\"43569000\" />\n      <workItem from=\"1701150502276\" duration=\"56535000\" />\n      <workItem from=\"1701320675482\" duration=\"1000\" />\n      <workItem from=\"1702386327122\" duration=\"1814000\" />\n      <workItem from=\"1703135084994\" duration=\"586000\" />\n      <workItem from=\"1703291684178\" duration=\"63000\" />\n      <workItem from=\"1703292324970\" duration=\"307000\" />\n      <workItem from=\"1703348545981\" duration=\"42721000\" />\n      <workItem from=\"1703585776659\" duration=\"32214000\" />\n      <workItem from=\"1703742070779\" duration=\"7563000\" />\n      <workItem from=\"1704165991056\" duration=\"161000\" />\n      <workItem from=\"1704190869037\" duration=\"978000\" />\n      <workItem from=\"1705039525144\" duration=\"2000\" />\n      <workItem from=\"1705039532700\" duration=\"1000\" />\n      <workItem from=\"1705127031163\" duration=\"14156000\" />\n      <workItem from=\"1705467895030\" duration=\"22039000\" />\n      <workItem from=\"1705650085996\" duration=\"18708000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"TEXT_FILTER_SETTINGS\">\n                <TextFilterSettings>\n                  <option name=\"REGEX\" value=\"true\" />\n                </TextFilterSettings>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"javascript\">\n          <url>file://$PROJECT_DIR$/src/app/screens/HelpPage/index.tsx</url>\n          <line>109</line>\n          <option name=\"timeStamp\" value=\"11\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 707a16508ae271dd841370f62e59818b31b114c8)
+++ b/.idea/workspace.xml	(date 1705924742073)
@@ -108,6 +108,7 @@
       <workItem from="1705127031163" duration="14156000" />
       <workItem from="1705467895030" duration="22039000" />
       <workItem from="1705650085996" duration="18708000" />
+      <workItem from="1705888964764" duration="13932000" />
     </task>
     <servers />
   </component>
